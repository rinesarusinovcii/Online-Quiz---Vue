<script setup>
import QuizCard from "@/components/ui/QuizCard.vue";
import {useLoading} from "@/composables/useLoading.js";
import QuizService from "@/service/quizService.js";
import {onMounted, ref} from "vue";
import QuizSpinner from "@/components/ui/QuizSpinner.vue";
import QuizButton from "@/components/ui/QuizButton.vue";
import {useAppToast} from "@/composables/useAppToast.js";
import { useRouter } from "vue-router";
import TheMainLayout from "@/components/ui/TheMainLayout.vue";

const { isLoading, withLoading } = useLoading();
const { showSuccess } = useAppToast();
const quizzes = ref([]);
const router = useRouter();

const loadQuizzes = async () => {
  await withLoading(async () => {
    quizzes.value = await QuizService.getAllQuizzes();
  });
};

const onDelete = async (id) => {
  if (confirm("Are you sure you want to delete this quiz?")) {
    try {
      isLoading.value = true;
      const response = await QuizService.deleteQuiz(id);
      if (response) {
        showSuccess("Quiz deleted successfully");
        await loadQuizzes(); // rifresko listÃ«n pa reload
      }
    } catch (e) {
      console.error(e);
    } finally {
      isLoading.value = false;
    }
  }
};

onMounted(async () => {
  await loadQuizzes();
});
</script>

<template>

  <the-main-layout>
    <template #content>
      <div class="col-lg-8 col-md-8 col-1 ">
        <quiz-card>
          <template #header>
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h5 class="mb-0">All Quizzes</h5>
              <router-link :to="{ name: 'create-quiz' }" class="btn btn-primary btn-sm">
                Add Quiz
              </router-link>
            </div>
          </template>

          <div v-if="isLoading" class="text-center my-5">
            <quiz-spinner :is-loading="isLoading" />
          </div>

          <div v-else>
            <div v-if="quizzes.length === 0" class="text-center p-4">
              <p>No quizzes found.</p>
            </div>

            <div class="row">
              <div v-for="quiz in quizzes" :key="quiz.id" class="col-lg-6 col-md-8 col-sm-12 mb-4">
                <div class="card h-100 shadow-sm d-flex flex-column">
                  <div class="card-body d-flex flex-column">
                    <h5 class="card-title">{{ quiz.title }}</h5>
                    <p class="card-text flex-grow-1">{{ quiz.description }}</p>
                    <p><strong>Category:</strong> {{ quiz.category }}</p>
                    <p><strong>Time Limit:</strong> {{ quiz.timeLimit }} minutes</p>
                    <p><strong>Created By:</strong> {{ quiz.createdBy || 'Unknown' }}</p>
                    <p><strong>Created At:</strong> {{ quiz.createdAt }}</p>

                    <div class="mt-auto d-flex flex-wrap gap-2">
                      <router-link
                          :to="{ name: 'add-question', params: { quizId: quiz.id } }"
                          class="btn btn-outline-primary btn-sm"
                      >
                        Add Question
                      </router-link>
                      <router-link
                          :to="{ name: 'quiz-details', params: { id: quiz.id } }"
                          class="btn btn-primary btn-sm"
                      >
                        Details
                      </router-link>

                      <router-link
                          :to="{ name: 'edit-quiz', params: { id: quiz.id } }"
                          class="btn btn-instagram btn-sm"
                      >
                        Edit
                      </router-link>

                      <quiz-button class="btn btn-danger btn-sm" @click="onDelete(quiz.id)">
                        Delete
                      </quiz-button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </quiz-card>
      </div>
    </template>
  </the-main-layout>


</template>

<style scoped>
.card-title {
  font-size: 1.25rem;
}
</style>
